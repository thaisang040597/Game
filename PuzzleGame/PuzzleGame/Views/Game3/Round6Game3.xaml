<UserControl x:Class="PuzzleGame.Views.Game3.Round6Game3"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PuzzleGame.Views.Game3"
             mc:Ignorable="d" 
             d:DesignHeight="768" Loaded="Window_Loaded" d:DesignWidth="1366">
    <Grid>
        <Grid.Resources>
            <DropShadowEffect x:Key="z-depth5" BlurRadius="35" ShadowDepth="15" Direction="270" Color="#BBBBBB"/>
            <Style TargetType="Button"  x:Key="btnLoginStyle2">
                <Setter Property="Background" Value="{DynamicResource btnLoginImgIdle}"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="Cursor" Value="Hand" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="button1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="60" Height="60">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource btnLoginImgHover}"/>
                                    <Setter Property="Width" Value="70" TargetName="button1"></Setter>
                                    <Setter Property="Height" Value="70" TargetName="button1"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource btnLoginImgClick}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button"  x:Key="btnLoginStyle">
                <Setter Property="Background" Value="{DynamicResource btnLoginImgIdle}"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="Cursor" Value="Hand" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="button1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="130" Height="45">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource btnLoginImgHover}"/>
                                    <Setter Property="Width" Value="125" TargetName="button1"></Setter>
                                    <Setter Property="Height" Value="45" TargetName="button1"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource btnLoginImgClick}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Image Source="/Images/Game2/Round2.1/img.jpg"></Image>
        <Button x:Name="back" Style="{StaticResource btnLoginStyle2}" Click="back_Click" VerticalAlignment="Top" HorizontalAlignment="Left">
            <Image Source="/Images/Background/backdoor1.png"></Image>
        </Button>
        <Grid ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1" ShowGridLines="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1"  ShowGridLines="False">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">

                        </Grid>
                        <Grid Grid.Row="1" ShowGridLines="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>

                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Button x:Name="step1" Style="{StaticResource btnLoginStyle}" Click="getHint" >
                                    <Label FontSize="18px" FontWeight="Bold" Margin="20px 0px 0px 0px  ">Get Hint</Label>
                                    <Button.Background>
                                        <ImageBrush x:Name="imgstep1" ImageSource="/Images/Game2/gethint.png"></ImageBrush>
                                    </Button.Background>
                                </Button>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Button x:Name="step2" Style="{StaticResource btnLoginStyle}" Click="rePlay" >
                                    <Label FontSize="18px" FontWeight="Bold" Margin="20px 0px 0px 0px  ">Replay</Label>
                                    <Button.Background>
                                        <ImageBrush x:Name="imgstep2" ImageSource="/Images/Game2/replay.png"></ImageBrush>
                                    </Button.Background>
                                </Button>
                            </Grid>
                            <!--<Grid Grid.Column="2">
                                -->
                            <!--<Button x:Name="Pause1" Style="{StaticResource btnLoginStyle}" Click="Pause1_Click" >
                                    <Label FontSize="18px" FontWeight="Bold" Margin="20px 0px 0px 0px  ">Pause</Label>
                                    <Button.Background>
                                        <ImageBrush x:Name="imgstep3" ImageSource="/Images/Game2/pause.png"></ImageBrush>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="Resume1" Style="{StaticResource btnLoginStyle}" Click="Resume1_Click" Visibility="Collapsed">
                                    <Label FontSize="18px" FontWeight="Bold" Margin="20px 0px 0px 0px  ">Resume</Label>
                                    <Button.Background>
                                        <ImageBrush x:Name="imgstep4" ImageSource="/Images/Game2/pause.png"></ImageBrush>
                                    </Button.Background>
                                </Button>-->

                            <!--<Button x:Name="step3" Style="{StaticResource btnLoginStyle}" Click="pause" >
                                    <Label FontSize="18px" FontWeight="Bold" Margin="20px 0px 0px 0px  ">Pause</Label>
                                    <Button.Background>
                                        <ImageBrush x:Name="imgstep3" ImageSource="/pause.png"></ImageBrush>
                                    </Button.Background>
                                </Button>-->
                            <!--
                            </Grid>-->
                        </Grid>
                    </Grid>
                </Grid>

            </Grid>
        </Grid>
        <Canvas Name="cnBoard" Width="440" Height="440" Background="White"></Canvas>
        <StackPanel  x:Name="bantay"  
                         Margin="700 250 600 400 "
                         Height="100"
                         Width="100"
                     Visibility="Collapsed" MouseDown="bantay_MouseDown">
            <StackPanel.Background>
                <ImageBrush ImageSource="/Images/Game1/Round1/bantay.png"></ImageBrush>
            </StackPanel.Background>
            <StackPanel.RenderTransform>
                <TranslateTransform x:Name="AnimatedTranslateTransform" />
            </StackPanel.RenderTransform>

            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="StackPanel.Loaded">
                    <BeginStoryboard>
                        <Storyboard>

                            <!-- Animate the TranslateTransform.X property using 3 KeyFrames
                   which animates the rectangle along a straight line. 
                   This animation repeats indefinitely. -->
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetName="AnimatedTranslateTransform"
                                    Storyboard.TargetProperty="X"
                                    Duration="0:0:2"
                                    RepeatBehavior="Forever">

                                <!-- Using a LinearDoubleKeyFrame, the rectangle moves 
                     steadily from its starting position to 500 over 
                     the first 3 seconds.  -->
                                <LinearDoubleKeyFrame Value="-40" KeyTime="0:0:1" />

                                <!-- Using a DiscreteDoubleKeyFrame, the rectangle suddenly 
                     appears at 400 after the fourth second of the animation. -->
                                <DiscreteDoubleKeyFrame Value="-40" KeyTime="0:0:1" />

                                <!-- Using a SplineDoubleKeyFrame, the rectangle moves 
                     back to its starting point. The
                     animation starts out slowly at first and then speeds up. 
                     This KeyFrame ends after the 6th
                     second. -->
                                <SplineDoubleKeyFrame KeySpline="0.0,0.0 0.0,0.00" Value="0" KeyTime="0:0:2" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetName="AnimatedTranslateTransform"
                                    Storyboard.TargetProperty="Y"
                                    Duration="0:0:2"
                                    RepeatBehavior="Forever">

                                <!-- Using a LinearDoubleKeyFrame, the rectangle moves 
                     steadily from its starting position to 500 over 
                     the first 3 seconds.  -->
                                <LinearDoubleKeyFrame Value="50" KeyTime="0:0:1" />

                                <!-- Using a DiscreteDoubleKeyFrame, the rectangle suddenly 
                     appears at 400 after the fourth second of the animation. -->
                                <DiscreteDoubleKeyFrame Value="50" KeyTime="0:0:1" />

                                <!-- Using a SplineDoubleKeyFrame, the rectangle moves 
                     back to its starting point. The
                     animation starts out slowly at first and then speeds up. 
                     This KeyFrame ends after the 6th
                     second. -->
                                <SplineDoubleKeyFrame KeySpline="0.0,0.0 0.0,0.00" Value="0" KeyTime="0:0:2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </StackPanel.Triggers>
        </StackPanel>
        <Grid Width="250" Height="250" x:Name="gethint"  Visibility="Collapsed" >

            <Border Grid.RowSpan="2" CornerRadius="15" Padding="2"  Width="250" Height="250" RenderTransformOrigin="0.844,0.439"
                VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" x:Name="bodertimeout"  Opacity="0.9">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="Bisque" Offset="0" />
                        <GradientStop Color="Orange" Offset="0.95" />
                    </LinearGradientBrush>

                </Border.Background>

            </Border>
            <Image Width="200" Height="200" x:Name="anhgoc" Source="/Images/Game3/conkhi.jpg"></Image>

        </Grid>
        <Grid x:Name="uc"></Grid>
    </Grid>
</UserControl>
